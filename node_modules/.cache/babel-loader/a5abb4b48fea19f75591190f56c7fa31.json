{"ast":null,"code":"import { types } from \"mobx-state-tree\";\nexport let SignUpFormProperties;\n\n(function (SignUpFormProperties) {\n  SignUpFormProperties[SignUpFormProperties[\"email\"] = 0] = \"email\";\n  SignUpFormProperties[SignUpFormProperties[\"password\"] = 1] = \"password\";\n})(SignUpFormProperties || (SignUpFormProperties = {}));\n\nconst RootStore = types.model({\n  email: types.optional(types.string, \"\"),\n  password: types.optional(types.string, \"\")\n}).actions(self => ({\n  handleChange: (key, val) => {\n    // @ts-ignore\n    self[key] = val;\n  }\n}));\nexport default RootStore;","map":{"version":3,"sources":["/home/zequee/pwa/miColmenaPwa/src/store/index.ts"],"names":["types","SignUpFormProperties","RootStore","model","email","optional","string","password","actions","self","handleChange","key","val"],"mappings":"AAAA,SAASA,KAAT,QAA4B,iBAA5B;AACA,WAAYC,oBAAZ;;WAAYA,oB;AAAAA,EAAAA,oB,CAAAA,oB;AAAAA,EAAAA,oB,CAAAA,oB;GAAAA,oB,KAAAA,oB;;AAKZ,MAAMC,SAAS,GAAGF,KAAK,CACpBG,KADe,CACT;AACLC,EAAAA,KAAK,EAAEJ,KAAK,CAACK,QAAN,CAAeL,KAAK,CAACM,MAArB,EAA6B,EAA7B,CADF;AAELC,EAAAA,QAAQ,EAAEP,KAAK,CAACK,QAAN,CAAeL,KAAK,CAACM,MAArB,EAA6B,EAA7B;AAFL,CADS,EAKfE,OALe,CAKPC,IAAI,KAAK;AAChBC,EAAAA,YAAY,EAAE,CAACC,GAAD,EAA4BC,GAA5B,KAA4C;AACxD;AACAH,IAAAA,IAAI,CAACE,GAAD,CAAJ,GAAYC,GAAZ;AACD;AAJe,CAAL,CALG,CAAlB;AAYA,eAAeV,SAAf","sourcesContent":["import { types, flow } from \"mobx-state-tree\";\nexport enum SignUpFormProperties {\n  email,\n  password\n}\n\nconst RootStore = types\n  .model({\n    email: types.optional(types.string, \"\"),\n    password: types.optional(types.string, \"\")\n  })\n  .actions(self => ({\n    handleChange: (key: SignUpFormProperties, val: string) => {\n      // @ts-ignore\n      self[key] = val;\n    }\n  }));\n\nexport default RootStore;\nexport type IRootStore = typeof RootStore.Type;\n"]},"metadata":{},"sourceType":"module"}