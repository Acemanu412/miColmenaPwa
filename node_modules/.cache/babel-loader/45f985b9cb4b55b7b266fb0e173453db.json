{"ast":null,"code":"import { types } from \"mobx-state-tree\";\nvar names;\n\n(function (names) {\n  names[names[\"email\"] = 0] = \"email\";\n  names[names[\"password\"] = 1] = \"password\";\n})(names || (names = {}));\n\nconst RootStore = types.model({\n  email: types.optional(types.string, \"\"),\n  password: types.optional(types.string, \"\")\n}).actions(self => ({\n  handleChange: (key, val) => {\n    // @ts-ignore\n    self[key] = val;\n  }\n}));\nexport default RootStore;","map":{"version":3,"sources":["/home/zequee/pwa/miColmenaPwa/src/store/index.ts"],"names":["types","names","RootStore","model","email","optional","string","password","actions","self","handleChange","key","val"],"mappings":"AAAA,SAASA,KAAT,QAA4B,iBAA5B;IACKC,K;;WAAAA,K;AAAAA,EAAAA,K,CAAAA,K;AAAAA,EAAAA,K,CAAAA,K;GAAAA,K,KAAAA,K;;AAKL,MAAMC,SAAS,GAAGF,KAAK,CACpBG,KADe,CACT;AACLC,EAAAA,KAAK,EAAEJ,KAAK,CAACK,QAAN,CAAeL,KAAK,CAACM,MAArB,EAA6B,EAA7B,CADF;AAELC,EAAAA,QAAQ,EAAEP,KAAK,CAACK,QAAN,CAAeL,KAAK,CAACM,MAArB,EAA6B,EAA7B;AAFL,CADS,EAKfE,OALe,CAKPC,IAAI,KAAK;AAChBC,EAAAA,YAAY,EAAE,CAACC,GAAD,EAAaC,GAAb,KAA6B;AACzC;AACAH,IAAAA,IAAI,CAACE,GAAD,CAAJ,GAAYC,GAAZ;AACD;AAJe,CAAL,CALG,CAAlB;AAYA,eAAeV,SAAf","sourcesContent":["import { types, flow } from \"mobx-state-tree\";\nenum names {\n  email,\n  password\n}\n\nconst RootStore = types\n  .model({\n    email: types.optional(types.string, \"\"),\n    password: types.optional(types.string, \"\")\n  })\n  .actions(self => ({\n    handleChange: (key: names, val: string) => {\n      // @ts-ignore\n      self[key] = val;\n    }\n  }));\n\nexport default RootStore;\nexport type IRootStore = typeof RootStore.Type;\n"]},"metadata":{},"sourceType":"module"}